<?xml version="1.0" encoding="UTF-8"?>
<project name="module_base_app" default="compile.module.base_app">
  <dirname property="module.base_app.basedir" file="${ant.file.module_base_app}"/>
  
  <property name="module.jdk.home.base_app" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.base_app" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.base_app" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.base_app" value="${compiler.args}"/>
  
  <property name="base_app.output.dir" value="${module.base_app.basedir}/../out/production/base_app"/>
  <property name="base_app.testoutput.dir" value="${module.base_app.basedir}/../out/test/base_app"/>
  
  <path id="base_app.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="base_app.module.production.classpath">
    <path refid="${module.jdk.classpath.base_app}"/>
    <path refid="library.commons.classpath"/>
  </path>
  
  <path id="base_app.runtime.production.module.classpath">
    <pathelement location="${base_app.output.dir}"/>
    <path refid="library.commons.classpath"/>
  </path>
  
  <path id="base_app.module.classpath">
    <path refid="${module.jdk.classpath.base_app}"/>
    <pathelement location="${base_app.output.dir}"/>
    <path refid="library.commons.classpath"/>
  </path>
  
  <path id="base_app.runtime.module.classpath">
    <pathelement location="${base_app.testoutput.dir}"/>
    <pathelement location="${base_app.output.dir}"/>
    <path refid="library.commons.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.base_app">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.base_app">
    <patternset refid="excluded.from.module.base_app"/>
  </patternset>
  
  <path id="base_app.module.sourcepath">
    <dirset dir="${module.base_app.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.base_app" depends="compile.module.base_app.production,compile.module.base_app.tests" description="Compile module base_app"/>
  
  <target name="compile.module.base_app.production" description="Compile module base_app; production classes">
    <mkdir dir="${base_app.output.dir}"/>
    <javac destdir="${base_app.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.base_app}/javac">
      <compilerarg line="${compiler.args.base_app}"/>
      <bootclasspath refid="base_app.module.bootclasspath"/>
      <classpath refid="base_app.module.production.classpath"/>
      <src refid="base_app.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.base_app"/>
    </javac>
    
    <copy todir="${base_app.output.dir}">
      <fileset dir="${module.base_app.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.base_app.tests" depends="compile.module.base_app.production" description="compile module base_app; test classes" unless="skip.tests"/>
  
  <target name="clean.module.base_app" description="cleanup module">
    <delete dir="${base_app.output.dir}"/>
    <delete dir="${base_app.testoutput.dir}"/>
  </target>
</project>